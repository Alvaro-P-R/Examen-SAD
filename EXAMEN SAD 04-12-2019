###   Todo el examen    ######


#Descifar contraseñas wordpress


cd C:\Users\avpal\Desktop\hashcat-5.1.0
$1ping  = Read-Host introduce la contrasena

$1ping  > b.txt 
Start-Sleep 5
.\hashcat64.exe  -a 0 -m 400  b.txt rockyou.txt --force
Write-Host "esto es la contraseña : -->"
Get-Content  hashcat.potfile


########## buscar actualizaciones ############


$Sesion = New-Object -ComObject Microsoft.Update.Session
$actualizacion = $Sesion.CreateUpdateSearcher().Search("IsInstalled=1").Updates
$actualizacion | Select-Object Title


##############  Comprobacion de ping o si existe una pagina ###################


$1ping  = Read-Host Introduce la idreion ip o pagina web
$ping = ping $1ping

foreach($linea in $ping){

  $hola = $linea.split(",")[2] 
  $hola  | select -Skip 1
  
}


if($linea -eq "vuelva a intentarlo."){
    Write-Host "no existe o no responde la ip introducida"

}
else{
    Write-Host "LA PAGINA\/IP  FUNCIONA BIEN "
}


#############   integridad   #######


Get-FileHash C:\Users\avpal\Desktop\hashcat-5.1.0 -Algorithm MD5
Get-FileHash C:\Users\avpal\Desktop\hashcat-5.1.0 -Algorithm SHA1
Get-FileHash C:\Users\avpal\Desktop\hashcat-5.1.0 -Algorithm SHA256
Get-FileHash C:\Users\avpal\Desktop\hashcat-5.1.0 -Algorithm SHA384
Get-FileHash C:\Users\avpal\Desktop\hashcat-5.1.0 -Algorithm SHA512
Get-FileHash C:\Users\avpal\Desktop\hashcat-5.1.0 -Algorithm RIPEMD160



cd C:\Users\avpal\Desktop

$primero = Get-FileHash hola.txt

Start-Sleep 5

$segundo = Get-FileHash hola.txt

if($primero -eq $segundo){

Write-Host "Todo funciona correctamente"
}
#####################  conseguir  informacion del  pc #########################################


Get-WmiObject -class "Win32_Processor"| % { 
    Write-Host "CPU ID: "
    Write-Host $_.DeviceID
    Write-Host "CPU Model: "
    Write-Host $_.Name
    Write-Host "CPU Cores: "
    Write-Host $_.NumberOfCores
    Write-Host "CPU Max Speed: "
    Write-Host $_.MaxClockSpeed 
    Write-Host "CPU Status: "
    Write-Host $_.Status 
    Write-Host 
}


#ver porgramas pc
Get-Package


#ver si una contseña es buena

$contraseña = Read-Host introduce la contraseña 


$contraseña 







$contraseña=Read-Host -AsSecureString 'introduce una contraseña  '


if($contraseña.Length -lt 10){'La contraseña no es segura pon una mas larga '}


else{'La contraseña es segura '}
